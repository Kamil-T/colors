{"version":3,"sources":["components/ColorBox.js","hooks/useInitialState.js","contexts/ColorContext.js","hooks/useToggle.js","components/Navbar.js","components/PaletteFooter.js","components/Palette.js","components/MiniPalette.js","components/PaletteList.js","components/SingleColorPalette.js","seedPalettes.js","colorHelpers.js","App.js","serviceWorker.js","index.js"],"names":["ColorBox","background","name","moreUrl","showLink","useState","isCopied","copy","useEffect","setTimeout","text","onCopy","style","className","to","onClick","e","stopPropagation","initialState","LevelContext","createContext","FormatContext","ColorProvider","props","levelStuff","useInitialState","formatStuff","Provider","value","children","useToggle","initialVal","state","setState","Navbar","showingLevel","useContext","level","setLevel","format","setFormat","open","setOpen","closeSnackbar","defaultValue","min","max","onAfterChange","step","Select","onChange","target","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","id","ContentProps","onClose","action","IconButton","color","key","aria-label","PaletteFooter","paletteName","emoji","Palette","palette","colors","colorBoxes","map","withStyles","root","backgroundColor","border","margin","borderRadius","padding","position","overflow","cursor","height","width","title","display","justifyContent","alignItems","paddingTop","fontSize","marginLeft","miniColor","marginBottom","classes","history","miniColorBoxes","push","goToPalette","container","flexDirection","flexWrap","nav","palettes","boxSizing","gridTemplateColumns","gridGap","SingleColorPalette","colorId","filterByColor","shades","allColors","concat","filter","slice","gatherShades","levels","generatePalette","starterPalette","newPalette","scale","getScale","reverse","i","toLowerCase","replace","hex","rgb","chroma","css","rgba","hexColor","numberOfColors","darken","getRange","mode","App","findPalette","seedPalettes","find","exact","path","render","routeProps","match","params","paletteId","Boolean","window","location","hostname","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b33b8e52.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport './ColorBox.css'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nconst ColorBox = ({ background, name, moreUrl, showLink }) => {\n  const [isCopied, copy] = useState(false)\n\n  const changeCopyState = () => {\n    copy(true)\n  }\n\n  useEffect(() => {\n    setTimeout(() => copy(false), 1500)\n  }, [isCopied])\n\n  return (\n    <CopyToClipboard text={background} onCopy={changeCopyState}>\n      <div style={{ background }} className='ColorBox'>\n        <div\n          style={{ background }}\n          className={`copy-overlay ${isCopied && 'show'}`}\n        />\n        <div className={`copy-msg ${isCopied && 'show'}`}>\n          <h1>copied!</h1>\n          <p>{background}</p>\n        </div>\n        <div className='copy-container'>\n          <div className='box-content'>\n            <span>{name}</span>\n          </div>\n          <button className='copy-btn'>Copy</button>\n        </div>\n        {showLink &&\n        <Link to={moreUrl} onClick={e => e.stopPropagation}>\n          <span className='see-more'>More</span>\n        </Link>\n        }\n      </div>\n    </CopyToClipboard>\n  )\n}\n\nexport default ColorBox\n","import { useState } from 'react'\n\nexport default initialState => {\n  const [state, setState] = useState(initialState)\n  return [state, setState]\n}\n","import React, { createContext } from 'react'\nimport useInitialState from '../hooks/useInitialState'\n\nexport const LevelContext = createContext()\nexport const FormatContext = createContext()\n\nconst ColorProvider = props => {\n  const levelStuff = useInitialState(500)\n  const formatStuff = useInitialState('hex')\n\n  return (\n    <LevelContext.Provider value={levelStuff}>\n      <FormatContext.Provider value={formatStuff}>\n        {props.children}\n      </FormatContext.Provider>\n    </LevelContext.Provider>\n  )\n}\n\nexport default ColorProvider\n","import { useState } from 'react'\n\nfunction useToggle(initialVal = false) {\n  const [state, setState] = useState(initialVal)\n  const toggle = () => {\n    setState(!state)\n  }\n  return [state, toggle]\n}\nexport default useToggle\n","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport useToggle from '../hooks/useToggle'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css'\nimport './Navbar.css'\nimport { LevelContext, FormatContext } from '../contexts/ColorContext'\n\nconst Navbar = ({ showingLevel }) => {\n  const [level, setLevel] = useContext(LevelContext)\n  const [format, setFormat] = useContext(FormatContext)\n  const [open, setOpen] = useToggle(false)\n\n  const changeFormat = e => {\n    setFormat(e.target.value)\n    setOpen(open)\n  }\n\n  const closeSnackbar = () => {\n    setOpen(open)\n  }\n\n  return (\n    <nav className='Navbar'>\n      <div className='logo'>\n        <Link to='/'>reactcolorpicker</Link>\n      </div>\n      {showingLevel && (\n        <div className='slider-container'>\n          <span>Level: {level}</span>\n          <div className='slider'>\n            <Slider\n              defaultValue={level}\n              min={100}\n              max={900}\n              onAfterChange={setLevel}\n              step={100}\n            />\n          </div>\n        </div>\n      )}\n      <div className='select-container'>\n        <Select value={format} onChange={changeFormat}>\n          <MenuItem value='hex'>HEX - #ffffff</MenuItem>\n          <MenuItem value='rgb'>RGB - rgb(255, 255, 255)</MenuItem>\n          <MenuItem value='rgba'>RGBA - rgba(255, 255, 255, 1.0)</MenuItem>\n        </Select>\n      </div>\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        open={open}\n        autoHideDuration={3000}\n        message={<span id='message-id'>Format Changed!</span>}\n        ContentProps={{ 'aria-describedby': 'message-id' }}\n        onClose={closeSnackbar}\n        action={[\n          <IconButton\n            onClick={closeSnackbar}\n            color='inherit'\n            key='close'\n            aria-label='close'>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </nav>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\n\nconst PaletteFooter = ({ paletteName, emoji }) => {\n  return (\n    <footer className='Palette-footer'>\n      {paletteName} <span className='emoji'>{emoji}</span>\n    </footer>\n  )\n}\n\nexport default PaletteFooter\n","import React, { useContext } from 'react'\nimport ColorBox from './ColorBox'\nimport './Palette.css'\nimport { LevelContext, FormatContext } from '../contexts/ColorContext'\nimport Navbar from './Navbar'\nimport PaletteFooter from './PaletteFooter'\n\nconst Palette = ({ palette }) => {\n  const [level] = useContext(LevelContext)\n  const [format] = useContext(FormatContext)\n  const { colors, paletteName, emoji, id } = palette\n\n  const colorBoxes = colors[level].map(color => (\n    <ColorBox\n      background={color[format]}\n      name={color.name}\n      key={color.id}\n      moreUrl={`/palette/${id}/${color.id}`}\n      showLink\n    />\n  ))\n\n  return (\n    <div className='Palette'>\n      <Navbar showingLevel />\n      <div className='Palette-colors'>{colorBoxes}</div>\n      <PaletteFooter paletteName={paletteName} emoji={emoji} />\n    </div>\n  )\n}\n\nexport default Palette\n","import React from 'react'\nimport { withStyles } from '@material-ui/styles'\n\nconst styles = {\n  root: {\n    backgroundColor: 'white',\n    border: '1px solid black',\n    margin: '2px 0',\n    borderRadius: '5px',\n    padding: '0.5rem',\n    position: 'relative',\n    overflow: 'hidden',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  colors: {\n    backgroundColor: 'grey',\n    height: '150px',\n    width: '100%'\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: '0',\n    color: 'black',\n    paddingTop: '0.5rem',\n    fontSize: '1rem',\n    position: 'relative',\n    '& span': {\n      marginLeft: '0.5rem',\n      fontSize: '1.5rem'\n    }\n  },\n  miniColor: {\n    height: '25%',\n    width: '20%',\n    display: 'inline-block',\n    margin: '0 auto',\n    position: 'relative',\n    marginBottom: '-3.5px'\n  }\n}\n\nconst MiniPalette = ({ classes, paletteName, emoji, colors, id, history }) => {\n  const miniColorBoxes = colors.map(color => (\n    <div\n      className={classes.miniColor}\n      style={{ backgroundColor: color.color }}\n      key={color.name}\n    />\n  ))\n\n  const goToPalette = id => {\n    return history.push(`/palette/${id}`)\n  }\n\n  return (\n    <div className={classes.root} onClick={() => goToPalette(id)}>\n      <div className={classes.colors}>{miniColorBoxes}</div>\n      <h5 className={classes.title}>\n        {paletteName} <span>{emoji}</span>\n      </h5>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(MiniPalette)\n","import React from 'react'\nimport MiniPalette from './MiniPalette'\nimport { withStyles } from '@material-ui/styles'\n\nconst styles = {\n  root: {\n    backgroundColor: 'blue',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'center'\n  },\n  container: {\n    width: '50%',\n    display: 'flex',\n    alignItems: 'flex-start',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flexWrap: 'wrap'\n  },\n  nav: {\n    color: 'white',\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-between'\n  },\n  palettes: {\n    boxSizing: 'border-box',\n    width: '100%',\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 30%)',\n    gridGap: '5%'\n  }\n}\n\nconst PaletteList = ({ palettes, classes, history }) => {\n  return (\n    <div className={classes.root}>\n      <div className={classes.container}>\n        <nav className={classes.nav}>\n          <h1>React Colors</h1>\n        </nav>\n        <div className={classes.palettes}>\n          {palettes.map(palette => (\n            <MiniPalette history={history} key={palette.id} {...palette} />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(PaletteList)\n","import React, { useContext } from 'react'\nimport ColorBox from './ColorBox'\nimport Navbar from './Navbar'\nimport { FormatContext } from '../contexts/ColorContext'\nimport PaletteFooter from './PaletteFooter'\n\nconst SingleColorPalette = ({ palette, colorId }) => {\n  const [format] = useContext(FormatContext)\n  const { paletteName, emoji } = palette\n\n  const gatherShades = (palette, filterByColor) => {\n    let shades = []\n    let allColors = palette.colors\n\n    for (let key in allColors) {\n      shades = shades.concat(\n        allColors[key].filter(color => color.id === filterByColor)\n      )\n    }\n\n    return shades.slice(1)\n  }\n  const shades = gatherShades(palette, colorId)\n\n  const colorBoxes = shades.map(color => (\n    <ColorBox\n      key={color.name}\n      name={color.name}\n      background={color[format]}\n      showLink={false}\n    />\n  ))\n\n  return (\n    <div className='Palette'>\n      <Navbar showingLevel={false} />\n      <div className='Palette-colors'>{colorBoxes}</div>\n      <PaletteFooter paletteName={paletteName} emoji={emoji} />\n    </div>\n  )\n}\n\nexport default SingleColorPalette\n","export default [\n  {\n    paletteName: \"Material UI Colors\",\n    id: \"material-ui-colors\",\n    emoji: \"🎨\",\n    colors: [\n      { name: \"red\", color: \"#F44336\" },\n      { name: \"pink\", color: \"#E91E63\" },\n      { name: \"purple\", color: \"#9C27B0\" },\n      { name: \"deeppurple\", color: \"#673AB7\" },\n      { name: \"indigo\", color: \"#3F51B5\" },\n      { name: \"blue\", color: \"#2196F3\" },\n      { name: \"lightblue\", color: \"#03A9F4\" },\n      { name: \"cyan\", color: \"#00BCD4\" },\n      { name: \"teal\", color: \"#009688\" },\n      { name: \"green\", color: \"#4CAF50\" },\n      { name: \"lightgreen\", color: \"#8BC34A\" },\n      { name: \"lime\", color: \"#CDDC39\" },\n      { name: \"yellow\", color: \"#FFEB3B\" },\n      { name: \"amber\", color: \"#FFC107\" },\n      { name: \"orange\", color: \"#FF9800\" },\n      { name: \"deeporange\", color: \"#FF5722\" },\n      { name: \"brown\", color: \"#795548\" },\n      { name: \"grey\", color: \"#9E9E9E\" },\n      { name: \"bluegrey\", color: \"#607D8B\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors v1\",\n    id: \"flat-ui-colors-v1\",\n    emoji: \"🤙\",\n    colors: [\n      { name: \"Turquoise\", color: \"#1abc9c\" },\n      { name: \"Emerald\", color: \"#2ecc71\" },\n      { name: \"PeterRiver\", color: \"#3498db\" },\n      { name: \"Amethyst\", color: \"#9b59b6\" },\n      { name: \"WetAsphalt\", color: \"#34495e\" },\n      { name: \"GreenSea\", color: \"#16a085\" },\n      { name: \"Nephritis\", color: \"#27ae60\" },\n      { name: \"BelizeHole\", color: \"#2980b9\" },\n      { name: \"Wisteria\", color: \"#8e44ad\" },\n      { name: \"MidnightBlue\", color: \"#2c3e50\" },\n      { name: \"SunFlower\", color: \"#f1c40f\" },\n      { name: \"Carrot\", color: \"#e67e22\" },\n      { name: \"Alizarin\", color: \"#e74c3c\" },\n      { name: \"Clouds\", color: \"#ecf0f1\" },\n      { name: \"Concrete\", color: \"#95a5a6\" },\n      { name: \"Orange\", color: \"#f39c12\" },\n      { name: \"Pumpkin\", color: \"#d35400\" },\n      { name: \"Pomegranate\", color: \"#c0392b\" },\n      { name: \"Silver\", color: \"#bdc3c7\" },\n      { name: \"Asbestos\", color: \"#7f8c8d\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Dutch\",\n    id: \"flat-ui-colors-dutch\",\n    emoji: \"🇳🇱\",\n    colors: [\n      { name: \"Sunflower\", color: \"#FFC312\" },\n      { name: \"Energos\", color: \"#C4E538\" },\n      { name: \"BlueMartina\", color: \"#12CBC4\" },\n      { name: \"LavenderRose\", color: \"#FDA7DF\" },\n      { name: \"BaraRose\", color: \"#ED4C67\" },\n      { name: \"RadiantYellow\", color: \"#F79F1F\" },\n      { name: \"AndroidGreen\", color: \"#A3CB38\" },\n      { name: \"MediterraneanSea\", color: \"#1289A7\" },\n      { name: \"LavenderTea\", color: \"#D980FA\" },\n      { name: \"VerryBerry\", color: \"#B53471\" },\n      { name: \"PuffinsBill\", color: \"#EE5A24\" },\n      { name: \"PixelatedGrass\", color: \"#009432\" },\n      { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\n      { name: \"ForgottenPurple\", color: \"#9980FA\" },\n      { name: \"HollyHock\", color: \"#833471\" },\n      { name: \"RedPigment\", color: \"#EA2027\" },\n      { name: \"TurkishAqua\", color: \"#006266\" },\n      { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\n      { name: \"CircumorbitalRing\", color: \"#5758BB\" },\n      { name: \"MagentaPurple\", color: \"#6F1E51\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors American\",\n    id: \"flat-ui-colors-american\",\n    emoji: \"🇺🇸\",\n    colors: [\n      { name: \"LightGreenishBlue\", color: \"#55efc4\" },\n      { name: \"FadedPoster\", color: \"#81ecec\" },\n      { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\n      { name: \"ShyMoment\", color: \"#a29bfe\" },\n      { name: \"CityLights\", color: \"#dfe6e9\" },\n      { name: \"MintLeaf\", color: \"#00b894\" },\n      { name: \"RobinsEggBlue\", color: \"#00cec9\" },\n      { name: \"ElectronBlue\", color: \"#0984e3\" },\n      { name: \"ExodusFruit\", color: \"#6c5ce7\" },\n      { name: \"SoothingBreeze\", color: \"#b2bec3\" },\n      { name: \"SourLemon\", color: \"#ffeaa7\" },\n      { name: \"FirstDate\", color: \"#fab1a0\" },\n      { name: \"PinkGlamour\", color: \"#ff7675\" },\n      { name: \"Pico8Pink\", color: \"#fd79a8\" },\n      { name: \"AmericanRiver\", color: \"#636e72\" },\n      { name: \"BrightYarrow\", color: \"#fdcb6e\" },\n      { name: \"OrangeVille\", color: \"#e17055\" },\n      { name: \"Chi-Gong\", color: \"#d63031\" },\n      { name: \"PrunusAvium\", color: \"#e84393\" },\n      { name: \"DraculaOrchid\", color: \"#2d3436\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Aussie\",\n    id: \"flat-ui-colors-aussie\",\n    emoji: \"🇦🇺\",\n    colors: [\n      { name: \"Beekeeper\", color: \"#f6e58d\" },\n      { name: \"SpicedNectarine\", color: \"#ffbe76\" },\n      { name: \"PinkGlamour\", color: \"#ff7979\" },\n      { name: \"JuneBud\", color: \"#badc58\" },\n      { name: \"CoastalBreeze\", color: \"#dff9fb\" },\n      { name: \"Turbo\", color: \"#f9ca24\" },\n      { name: \"QuinceJelly\", color: \"#f0932b\" },\n      { name: \"CarminePink\", color: \"#eb4d4b\" },\n      { name: \"PureApple\", color: \"#6ab04c\" },\n      { name: \"HintOfIcePack\", color: \"#c7ecee\" },\n      { name: \"MiddleBlue\", color: \"#7ed6df\" },\n      { name: \"Heliotrope\", color: \"#e056fd\" },\n      { name: \"ExodusFruit\", color: \"#686de0\" },\n      { name: \"DeepKoamaru\", color: \"#30336b\" },\n      { name: \"SoaringEagle\", color: \"#95afc0\" },\n      { name: \"GreenlandGreen\", color: \"#22a6b3\" },\n      { name: \"SteelPink\", color: \"#be2edd\" },\n      { name: \"Blurple\", color: \"#4834d4\" },\n      { name: \"DeepCove\", color: \"#130f40\" },\n      { name: \"WizardGrey\", color: \"#535c68\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors British\",\n    id: \"flat-ui-colors-british\",\n    emoji: \"🇬🇧\",\n    colors: [\n      { name: \"ProtossPylon\", color: \"#00a8ff\" },\n      { name: \"Periwinkle\", color: \"#9c88ff\" },\n      { name: \"Rise-N-Shine\", color: \"#fbc531\" },\n      { name: \"DownloadProgress\", color: \"#4cd137\" },\n      { name: \"Seabrook\", color: \"#487eb0\" },\n      { name: \"VanaDylBlue\", color: \"#0097e6\" },\n      { name: \"MattPurple\", color: \"#8c7ae6\" },\n      { name: \"NanohanachaGold\", color: \"#e1b12c\" },\n      { name: \"SkirretGreen\", color: \"#44bd32\" },\n      { name: \"Naval\", color: \"#40739e\" },\n      { name: \"NasturcianFlower\", color: \"#e84118\" },\n      { name: \"LynxWhite\", color: \"#f5f6fa\" },\n      { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\n      { name: \"MazarineBlue\", color: \"#273c75\" },\n      { name: \"BlueNights\", color: \"#353b48\" },\n      { name: \"HarleyOrange\", color: \"#c23616\" },\n      { name: \"HintOfPensive\", color: \"#dcdde1\" },\n      { name: \"ChainGangGrey\", color: \"#718093\" },\n      { name: \"PicoVoid\", color: \"#192a56\" },\n      { name: \"ElectroMagnetic\", color: \"#2f3640\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Spanish\",\n    id: \"flat-ui-colors-spanish\",\n    emoji: \"🇪🇸\",\n    colors: [\n      { name: \"JacksonsPurple\", color: \"#40407a\" },\n      { name: \"C64Purple\", color: \"#706fd3\" },\n      { name: \"SwanWhite\", color: \"#f7f1e3\" },\n      { name: \"SummerSky\", color: \"#34ace0\" },\n      { name: \"CelestialGreen\", color: \"#33d9b2\" },\n      { name: \"LuckyPoint\", color: \"#2c2c54\" },\n      { name: \"Liberty\", color: \"#474787\" },\n      { name: \"HotStone\", color: \"#aaa69d\" },\n      { name: \"DevilBlue\", color: \"#227093\" },\n      { name: \"PalmSpringsSplash\", color: \"#218c74\" },\n      { name: \"FlourescentRed\", color: \"#ff5252\" },\n      { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\n      { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\n      { name: \"MandarinSorbet\", color: \"#ffb142\" },\n      { name: \"SpicedButterNut\", color: \"#ffda79\" },\n      { name: \"EyeOfNewt\", color: \"#b33939\" },\n      { name: \"ChileanFire\", color: \"#cd6133\" },\n      { name: \"GreyPorcelain\", color: \"#84817a\" },\n      { name: \"AlamedaOchre\", color: \"#cc8e35\" },\n      { name: \"Desert\", color: \"#ccae62\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Indian\",\n    id: \"flat-ui-colors-indian\",\n    emoji: \"🇮🇳\",\n    colors: [\n      { name: \"OrchidOrange\", color: \"#FEA47F\" },\n      { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\n      { name: \"HoneyGlow\", color: \"#EAB543\" },\n      { name: \"SweetGarden\", color: \"#55E6C1\" },\n      { name: \"FallingStar\", color: \"#CAD3C8\" },\n      { name: \"RichGardenia\", color: \"#F97F51\" },\n      { name: \"ClearChill\", color: \"#1B9CFC\" },\n      { name: \"WhitePepper\", color: \"#F8EFBA\" },\n      { name: \"Keppel\", color: \"#58B19F\" },\n      { name: \"ShipsOfficer\", color: \"#2C3A47\" },\n      { name: \"FieryFuchsia\", color: \"#B33771\" },\n      { name: \"BlueBell\", color: \"#3B3B98\" },\n      { name: \"GeorgiaPeach\", color: \"#FD7272\" },\n      { name: \"OasisStream\", color: \"#9AECDB\" },\n      { name: \"BrightUbe\", color: \"#D6A2E8\" },\n      { name: \"MagentaPurple\", color: \"#6D214F\" },\n      { name: \"EndingNavyBlue\", color: \"#182C61\" },\n      { name: \"SasquatchSocks\", color: \"#FC427B\" },\n      { name: \"PineGlade\", color: \"#BDC581\" },\n      { name: \"HighlighterLavender\", color: \"#82589F\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors French\",\n    id: \"flat-ui-colors-french\",\n    emoji: \"🇫🇷\",\n    colors: [\n      { name: \"FlatFlesh\", color: \"#fad390\" },\n      { name: \"MelonMelody\", color: \"#f8c291\" },\n      { name: \"Livid\", color: \"#6a89cc\" },\n      { name: \"Spray\", color: \"#82ccdd\" },\n      { name: \"ParadiseGreen\", color: \"#b8e994\" },\n      { name: \"SquashBlossom\", color: \"#f6b93b\" },\n      { name: \"MandarinRed\", color: \"#e55039\" },\n      { name: \"AzraqBlue\", color: \"#4a69bd\" },\n      { name: \"Dupain\", color: \"#60a3bc\" },\n      { name: \"AuroraGreen\", color: \"#78e08f\" },\n      { name: \"IcelandPoppy\", color: \"#fa983a\" },\n      { name: \"TomatoRed\", color: \"#eb2f06\" },\n      { name: \"YueGuangBlue\", color: \"#1e3799\" },\n      { name: \"GoodSamaritan\", color: \"#3c6382\" },\n      { name: \"Waterfall\", color: \"#38ada9\" },\n      { name: \"CarrotOrange\", color: \"#e58e26\" },\n      { name: \"JalapenoRed\", color: \"#b71540\" },\n      { name: \"DarkSapphire\", color: \"#0c2461\" },\n      { name: \"ForestBlues\", color: \"#0a3d62\" },\n      { name: \"ReefEncounter\", color: \"#079992\" }\n    ]\n  }\n];\n","import chroma from 'chroma-js'\n\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900]\n\nconst generatePalette = starterPalette => {\n  let newPalette = {\n    paletteName: starterPalette.paletteName,\n    id: starterPalette.id,\n    emoji: starterPalette.emoji,\n    colors: {}\n  }\n\n  for (let level of levels) {\n    newPalette.colors[level] = []\n  }\n\n  for (let color of starterPalette.colors) {\n    let scale = getScale(color.color, 10).reverse()\n    for (let i in scale) {\n      newPalette.colors[levels[i]].push({\n        name: `${color.name} ${levels[i]}`,\n        id: color.name.toLowerCase().replace(/ /g, '-'),\n        hex: scale[i],\n        rgb: chroma(scale[i]).css(),\n        rgba: chroma(scale[i])\n          .css()\n          .replace('rgb', 'rgba')\n          .replace(')', ',1.0)')\n      })\n    }\n  }\n\n  return newPalette\n}\n\nconst getRange = hexColor => {\n  const end = '#fff'\n\n  return [\n    chroma(hexColor)\n      .darken(1.4)\n      .hex(),\n    hexColor,\n    end\n  ]\n}\n\nconst getScale = (hexColor, numberOfColors) => {\n  return chroma\n    .scale(getRange(hexColor))\n    .mode('lab')\n    .colors(numberOfColors)\n}\n\nexport { generatePalette }\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Palette from './components/Palette'\nimport PaletteList from './components/PaletteList'\nimport SingleColorPalette from './components/SingleColorPalette'\nimport seedPalettes from './seedPalettes'\nimport { generatePalette } from './colorHelpers'\nimport ColorProvider from './contexts/ColorContext'\n\nfunction App() {\n  const findPalette = id => {\n    return seedPalettes.find(palette => {\n      return palette.id === id\n    })\n  }\n\n  return (\n    <ColorProvider>\n      <Switch>\n        <Route\n          exact\n          path='/'\n          render={routeProps => (\n            <PaletteList palettes={seedPalettes} {...routeProps} />\n          )}\n        />\n        <Route\n          exact\n          path='/palette/:id'\n          render={routeProps => (\n            <Palette\n              palette={generatePalette(findPalette(routeProps.match.params.id))}\n            />\n          )}\n        />\n        <Route\n          exact\n          path='/palette/:paletteId/:colorId'\n          render={routeProps => (\n            <SingleColorPalette\n              colorId={routeProps.match.params.colorId}\n              palette={generatePalette(\n                findPalette(routeProps.match.params.paletteId)\n              )}\n            />\n          )}\n        />\n      </Switch>\n    </ColorProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}